<configuration>
    <!-- 首先查找系统属性-Dlog.dir,如果存在就使用其;否则,在当前目录下创建名为logs目录做日志存放的目录 -->
    <substitutionProperty name="log.base" value="${log.dir:-logs}"/>
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{56} - %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="F_APP" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${log.base}/app/application.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.base}/app/application-%d{yyyy-MM-dd-HH}.log</fileNamePattern>

            <!-- 日志保留30天 -->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%date{yyyy-MM-dd HH:mm:ss}[%thread] %-5level [%logger] - %m%n</pattern>
        </encoder>
    </appender>


    <appender name="F_ERR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${log.base}/error/error.log</File>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.base}/error/error-%d{yyyy-MM-dd-HH}.log</fileNamePattern>
            <!-- 日志保留180天 -->
            <maxHistory>180</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%date{yyyy-MM-dd HH:mm:ss}[%thread] %-5level [%logger] - %m%n</pattern>
        </encoder>
    </appender>

    <appender name="F_WARN" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${log.base}/warning/warning.log</File>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARNING</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.base}/warning/warning-%d{yyyy-MM-dd-HH}.log</fileNamePattern>
            <!-- 日志保留180天 -->
            <maxHistory>180</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%date{yyyy-MM-dd HH:mm:ss}[%thread] %-5level [%logger] - %m%n</pattern>
        </encoder>
    </appender>

    <appender name="F_PROFILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${log.base}/profile/profile.log</File>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>TRACE</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.base}/profile/profile-%d{yyyy-MM-dd-HH}.log</fileNamePattern>
            <!-- 日志保留15天 -->
            <maxHistory>15</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%date{yyyy-MM-dd HH:mm:ss}[%thread] %-5level [%logger] - %m%n</pattern>
        </encoder>
    </appender>

    <appender name="ASYNC_APP" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="F_APP"/>
    </appender>

    <appender name="ASYNC_ERR" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="F_ERR"/>
    </appender>
    <appender name="ASYNC_WARN" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="F_WARN"/>
    </appender>
    <appender name="ASYNC_PROFILE" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="F_PROFILE"/>
    </appender>


    <!-- 压力测试 -->

    <appender name="F_STRESS_INTENT" class="ch.qos.logback.core.FileAppender">
        <File>${log.base}/stress/intent.log</File>
        <encoder>
            <pattern>%m - %date{yyyy-MM-dd HH:mm:ss}[%thread] %-5level [%logger]%n</pattern>
        </encoder>
    </appender>
    <appender name="F_STRESS_NON_INTENT" class="ch.qos.logback.core.FileAppender">
        <File>${log.base}/stress/non-intent.log</File>
        <encoder>
            <pattern>%m - %date{yyyy-MM-dd HH:mm:ss}[%thread] %-5level [%logger]%n</pattern>
        </encoder>
    </appender>
    <appender name="F_STRESS_RESPONSE" class="ch.qos.logback.core.FileAppender">
        <File>${log.base}/stress/response.log</File>
        <encoder>
            <pattern>%m - %date{yyyy-MM-dd HH:mm:ss}[%thread] %-5level [%logger]%n</pattern>
        </encoder>
    </appender>
    <appender name="F_STRESS_RESPONSE_ERROR" class="ch.qos.logback.core.FileAppender">
        <File>${log.base}/stress/response-error.log</File>
        <encoder>
            <pattern>%m - %date{yyyy-MM-dd HH:mm:ss}[%thread] %-5level [%logger]%n</pattern>
        </encoder>
    </appender>
    <appender name="F_STRESS_LATENCY" class="ch.qos.logback.core.FileAppender">
        <File>${log.base}/stress/latency.log</File>
        <encoder>
            <pattern>%m - %date{yyyy-MM-dd HH:mm:ss}[%thread] %-5level [%logger]%n</pattern>
        </encoder>
    </appender>

    <root level="DEBUG">
        <!-- 日志打印到控制台 -->
         <appender-ref ref="STDOUT"/>
        <appender-ref ref="ASYNC_APP"/>
        <!--<appender-ref ref="ASYNC_WARN"/>-->
        <appender-ref ref="ASYNC_ERR"/>
    </root>


    <logger name="org.apache" level="INFO"/>
    <logger name="org.apache.http" level="INFO"/>
    <logger name="com.baidu.aip.talker.command.upload.UploadDataEntity" level="TRACE">
        <appender-ref ref="ASYNC_PROFILE"/>
    </logger>

    <!-- <logger name="com.baidu.aip.talker.command.upload.UploadData" level="OFF"></logger>
    <logger name="com.baidu.aip.talker.command.upload.Uploader" level="OFF"></logger> -->



    <logger name="commonWriter.intent" level="DEBUG">
        <appender-ref ref="F_STRESS_INTENT"/>
    </logger>
    <logger name="commonWriter.non-intent" level="DEBUG">
        <appender-ref ref="F_STRESS_NON_INTENT"/>
    </logger>
    <logger name="commonWriter.response" level="DEBUG">
        <appender-ref ref="F_STRESS_RESPONSE"/>
    </logger>
    <logger name="commonWriter.response-error" level="DEBUG">
        <appender-ref ref="F_STRESS_RESPONSE_ERROR"/>
    </logger>
    <logger name="com.baidu.aip.demotest.StressBeforeUploadListener" level="DEBUG">
        <appender-ref ref="F_STRESS_LATENCY"/>
    </logger>
</configuration>